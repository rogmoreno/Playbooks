# code: language=ansible
- name: Install and configure services
  hosts: servers
  become: true
  vars_files:
    - dhcp_vars.yml
    - named_vars.yml
    - samba_vars.yml
    - httpd_vars.yml
    - nfs_vars.yml

  tasks:
    - name: Add users 
      ansible.builtin.user:
        name: "{{ item.name }}"
        password: "{{ item.password }}"
        state: present
        loop:
            - name: user1
              password: user1
            - name: user2
              password: user2
        

    - name: Install required packages
      yum:
            name: "{{ item }}"
            state: present
      loop:
            - samba
            - dhcp-server
            - httpd
            - bind
            - mariadb-server
            - php
            - php-mysqlnd
            - php-gd
            - php-mbstring
            - php-xml
            - php-json
            - php-pear
            - php-fpm
            - php-opcache
            - nfs-server


    - name: Open necessary ports in firewall
      hosts= servers
      firewalld:
            port: "{{ item }}"
            permanent: true
            state: enabled
            immediate: true
      loop:
            - 137/tcp
            - 138/tcp
            - 139/tcp
            - 445/tcp
            - 67/udp
            - 68/udp
            - 80/tcp
            - 443/tcp
            - 53/tcp
            - 53/udp
            - 3306/tcp

    - name: Configure dhcpd.conf
      ansible.builtin.template:
        src: dhcpd.conf.j2
        dest: /etc/dhcp/dhcpd.conf
        mode: 420
        owner: root
        group: root
      notify: restart dhcpd    
      
    - name: Configure named.conf
      ansible.builtin.template:
        src: named.conf.j2
        dest: /etc/named.conf
        mode: 420
        owner: root
        group: root
      notify: restart named

    - name: Generate zone files
      ansible.builtin.template:
        src: "{{ item.name }}.zone.j2"
        dest: "/var/named/{{ item.name }}.zone"
        mode: 420
        owner: named
        group: named
      with_items: "{{ domains }}"
    
    - name: configure nfs-server /etc/exports
      lineinfile:
            path: /etc/exports
            line: "{{ item }}"
      loop:
            - /var/www/html/website1
            - /var/www/html/website2
      
    - name: configure samba on smb.conf
      community.general.ini_file:
          path: /etc/samba/smb.conf
          section: global
          option: "{{ item.option }}"
          value: "{{ item.value }}"
      loop:
          - option: workgroup
            value: WORKGROUP
          - option: alias
            value: samba
          - option: security
            value: user
          - option: map to guest
            value: bad user
          - option: guest account
            value: nobody
          - option: log file
            value: /var/log/samba/%m.log
    - name: samba user
      user:
            name: "{{ item.name }}"
            password: "{{ item.password }}"
            state: present
      loop:
            - name: user1
            - password: user1
            - name: user2
            - password: user2
        
    - name: configure samba on smb.conf
      community.general.ini_file:
          path: /etc/samba/smb.conf
          section: share
          option: "{{ item.option }}"
          value: "{{ item.value }}"
      loop:
          - option: workgroup
            value: WORKGROUP
          - option: alias
            value: samba
          - option: security
            value: user
          - option: map to guest
            value: bad user
          - option: guest account
            value: nobody
          - option: log file
            value: /var/log/samba/%m.log
        
    - name: copy websiteA
      copy:
            src: /root/website1
            dest: /var/www/html/website1
      
    - name: copy websiteB
      copy:
          src: /root/website2
          dest: /var/www/html/website2

    - name: httpd.conf.d websiteA
      copy:
          src: /root/website1.conf
          dest: /etc/httpd/conf.d/website1.conf
      
    - name: httpd.conf.d websiteB
      copy:
          src: /root/website2.conf
          dest: /etc/httpd/conf.d/website2.conf
        
    - name: Apply SELinux policies
      selinux:
            policy: targeted
            state: disabled

    - name: start and enable services
      service:
            name: "{{ item }}"
            state: started
            enabled: true
      loop:
            - smb
            - nmb
            - dhcpd
            - httpd
            - named
            - mariadb
            - php-fpm

- samba share:
    - name: {{ item.name }}
      path: {{ item.path }}
      browsable: yes
      writable: yes
      guest_ok: yes
      read_only: no
      create_mask: 0777
      directory_mask: 0777
      force_create_mode: 0777
      force_directory_mode: 0777
      force_user: {{ item.force_user}}
      force_group: {{ item.force_group}}
      with_items: "{{ folders }}"

- name: create database
  mysql_db:
    name: "{{ item.name }}"
    state: present
  with_items: "{{ databases }}"



